name: CI

on:
  pull_request:
    branches: [main]
  push:
    branches-ignore: [main]
  workflow_dispatch:

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: actions/setup-python@v5
      - uses: pre-commit/action@v3.0.1

  test:
    name: Test (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.11", "3.12", "3.13"]

    steps:
      - name: Checkout source
        uses: actions/checkout@v4.2.2

      - name: Setup conda environment
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniconda-version: "latest"
          python-version: ${{ matrix.python-version }}
          environment-file: ci/environment-${{ matrix.python-version }}.yml
          activate-environment: access-nri-intake-test
          auto-activate-base: false

      - name: Install source
        shell: bash -l {0}
        run: python -m pip install .

      - name: Create default config file
        shell: bash -l {0}
        run: |
          mkdir -p ~/.mopper
          cat <<EOF > ~/.mopper/user.yml
          creator_name: "CI Bot"
          organisation: "ACCESS-NRI"
          creator_email: "ci@example.com"
          creator_url: "https://example.com"
          EOF

      - name: List installed packages
        shell: bash -l {0}
        run: conda list

      - name: Run tests
        shell: bash -l {0}
        run: coverage run -m --source=access_nri_intake pytest tests

      - name: Generate coverage report
        shell: bash -l {0}
        run: coverage xml

      - name: Upload code coverage
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.codecov_token }}
          files: ./coverage.xml
